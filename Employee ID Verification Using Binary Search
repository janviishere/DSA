//Ascending order input

#include <iostream>
using namespace std;

int Search(int arr[], int n, int key) 
{
    int low = 0, high = n - 1;

    while (low <= high)
    {
        int mid = (low + high) / 2;

        if (arr[mid] == key) {
            return mid;  
        }
        else if (arr[mid] < key) {
            low = mid + 1;  
        }
        else {
            high = mid - 1; 
        }
    }
    return -1;
}

int main()
{
    int n, key;

    cout << "Enter number of employees: ";
    cin >> n;

    int arr[n];

    cout << "Enter sorted employee IDs: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "Enter employee ID to search: ";
    cin >> key;

    int result = Search(arr, n, key);

    if (result != -1)
        cout << "Employee ID found at index: " << result << endl;
    else
        cout << "Employee ID not found." << endl;

    return 0;
}







//Descending order input

#include <iostream>
using namespace std;

int binarySearch(int arr[], int n, int key) 
{
    int low = 0, high = n - 1;

    while (low <= high)
    {
        int mid = (low + high) / 2;

        if (arr[mid] == key) {
            return mid;  
        }
        else if (arr[mid] < key) 
        {  
            high = mid - 1;  
        }
        else {  
            low = mid + 1;  
        }
    }
    return -1;
}

int main()
{
    int n, key;

    cout << "Enter number of employees: ";
    cin >> n;

    int arr[n];

    cout << "Enter sorted employee IDs: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "Enter employee ID to search: ";
    cin >> key;

    int result = binarySearch(arr, n, key);

    if (result != -1)
        cout << "Employee ID found at index: " << result << endl;
    else
        cout << "Employee ID not found." << endl;

    return 0;
}






//All input equal

#include <iostream>
using namespace std;

int binarySearch(int arr[], int n, int key) 
{
    int low = 0, high = n - 1;

    if (arr[0] == arr[n - 1]) 
    {
        if (arr[0] == key)
            return 0;   
        else
            return -1;  
    }

    bool isAscending = arr[0] < arr[n - 1];

    while (low <= high)
    {
        int mid = (low + high) / 2;

        if (arr[mid] == key) 
        {
            return mid;  
        }

        if (isAscending) 
        {
            if (arr[mid] < key)
                low = mid + 1;
            else
                high = mid - 1;
        }
        else 
        {
            if (arr[mid] < key)
                high = mid - 1;
            else
                low = mid + 1;
        }
    }
    return -1;
}

int main()
{
    int n, key;

    cout << "Enter number of employees: ";
    cin >> n;

    int arr[n];

    cout << "Enter sorted employee IDs: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    cout << "Enter employee ID to search: ";
    cin >> key;

    int result = binarySearch(arr, n, key);

    if (result != -1)
        cout << "Employee ID found at index: " << result << endl;
    else
        cout << "Employee ID not found." << endl;

    return 0;
}
